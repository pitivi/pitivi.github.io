fragment_downloaded_cb({"url":"HACKING.html#how-we-use-the-sandbox","fragment":"How we use the sandbox\nThe sandbox we set up has access to the host file system. This allows\nrunning the Python modules in pitivi-dev/pitivi/pitivi/... on top of\nthe GNOME + Pitivi dependencies system installed in the sandbox.\nWithout this trick, you'd have to build and install every time when you\nchange a .py file, to be able to test how it works, which would be\nannoying because it takes a non-negligible amount of time.\nWe don't actually run Pitivi 100% uninstalled. Besides the .py files\nthere are other parts which need to be built when changed or even\ninstalled before using them:\nSelect parts of Pitivi are written in C, such as the audio envelope\nrenderer for the audio clips. Build them with ninja -C mesonbuild/ or\nwith our very own alias build, which is the same thing. No need to\ninstall them.\nSimilarly, bin/pitivi.py.in and pitivi/configure.py.in also need\nto be built with build, to regenerate the corresponding .py files.\nThe translations need to be built and installed, which can be done\nwith binstall. See \"Switching locales\" below.\n\n\nSelect parts of Pitivi are written in C, such as the audio envelope\nrenderer for the audio clips. Build them with ninja -C mesonbuild/ or\nwith our very own alias build, which is the same thing. No need to\ninstall them.\n\n\nSimilarly, bin/pitivi.py.in and pitivi/configure.py.in also need\nto be built with build, to regenerate the corresponding .py files.\n\n\nThe translations need to be built and installed, which can be done\nwith binstall. See \"Switching locales\" below.\n\n\n"});
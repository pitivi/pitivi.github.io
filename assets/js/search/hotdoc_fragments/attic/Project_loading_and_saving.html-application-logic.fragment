fragment_downloaded_cb({"url":"attic/Project_loading_and_saving.html#application-logic","fragment":"Application Logic\nThe high level application logic is relatively straight forward. The\ncoding will not be, due to the nature of the GObject/Gtk. The logic is\ndivided into four operations. these are “New”, “Load”, “Save”, and\n“Close”. The “Close” process is not directly operation by the user, but\nis performed any time the current project is to be replaced.\nImage:New flowchart.png|Logic for creating a new project Image:Load\nflowchart.png|Logic for loading an existing project Image:Save\nflowchart.png|Logic for saving a project (both “Save” and “Save As”)\nImage:Close flowchart.png|Logic for closing a project\nAt the lower level, the application logic will be implemented through\nsignals, and callbacks.\nThe core classes will provide public methods for initiating the\noperations of saving, loading, and creating new projects. If the core\nneeds user input, it will emit the appropriate signal, passing a\nreference to a callback. If the UI determines that further action is\nnecessary by the system, the UI then returns control to the system by\ncalling the callback. This means that system code could be split into\ntwo functions, the public interface which initiates the action, and the\ndeferred callback which finalizes the action.\n"});
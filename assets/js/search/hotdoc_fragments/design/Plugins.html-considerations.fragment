fragment_downloaded_cb({"url":"design/Plugins.html#considerations","fragment":"Considerations\nThese case studies exemplify two different approaches for extending the\nhost application:\nIn the first two cases (Deluge and Jokosher) the host application\nbasically defines a plugin manager that takes care of activating and\ndeactivating plugins; when activated, the plugin is allowed to access\nthe core objects and modify the application as it wants.\nThis approach has the advantage to leave complete freedom to plugins at\nthe cost of anarchy, since there isn't a standardized way for the plugin\nto interact with the host application. Jokosher tries to overcome this\nsituation by defining some API that can be optionally used by plugins to\naccomplish common tasks. The other big advantage is that plugins can be\ncreated to extend aspect of the application not considered originally by\nthe author to be extendable.\nIn the third case study (Trac), as opposite, plugins can only extend\nspecific aspects of the host application defined as extension points,\nwhose declare a clear contract the plugin must subscrive if it wants to\nextend the host application.\nThis approach enforces a neat definition of rights and duties for the\npartiecipants to the extension process at the cost of some freedom. In\nthis way plugins do not “put” their features into the application, but\n“offer” instead some extended features the application can use.\nThe last case study (Zope) further improves the concept of interfaces,\nadding the possibility to define attributes/constrains inside\ninterfaces, providing functions to check interface\nimplementation/definition, adding a complete facility to provide\nadapters; all this is done in the pythonic way of leaving the developer\nthe most freedom.\nThe main advantage of using interfaces over class inheritance is that\nthe former defines relationships between items and keeps the system\nhighly decoupled, while the latter constrains thee partecipants to a gree\nan “is a” relationship, thus creating strong coupling between classes.\n"});
fragment_downloaded_cb({"url":"design/Grouping_and_nesting.html#recursion-via-gstreamer","fragment":"Recursion via GStreamer\nAt one extreme, the minimum development cost approach is one that\nrequires exactly no code within Pitivi (or GES). Instead, we may create\na new gstreamer decoder element (e.g. pitividec) that takes as its input\nthe contents of a Pitivi project file. This decoder would reuse the GES\ncore to expose an interface equivalent to decodebin.\nOnce such an element is appropriately registered, decodebin,\nuridecodebin, and playbin will be able to play Pitivi project files as\nif they were video clips. This means that Pitivi project files would,\nwith no additional code, become playable in gstreamer-based players such\nas Totem (subject to CPU limitations, of course). Naturally, it also\nmeans that they are importable as clips into Pitivi itself, for use in\nhigher-level timelines.\nIn effect, this approach is equivalent to rendering out the project to\nan intermediate clip that is then imported into another project, except\nthat it avoids the cost in disk space and compression loss. A\nsufficiently advanced implementation might also negotiate output\nparameters such as resolution to avoid unnecessary scaling.\n"});
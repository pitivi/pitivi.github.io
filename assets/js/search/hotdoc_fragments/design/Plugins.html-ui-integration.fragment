fragment_downloaded_cb({"url":"design/Plugins.html#ui-integration","fragment":"UI integration\nExtending the user interface could be achieved in basically two ways in\nGTK:\nThe first is writing custom code to integrate new widgets provided by\nthe plugin into the current user interface design.\nThe second way is taking advantage of the UImanager component provided\nby gtk, this facility allow the developer to define UI widgets as xml\nthen the UImanager can be told to merge the xml code into the existing\nGUI. Even thought this approach requires the plugin writer to learn\nUImanager xml syntax, the process clearly separate the UI creation part\nfrom the definition of actions triggered by the new UI piece, so it'll\nbe preferred to the former approach when possible.\nDespite of the type of widget integrated in the main user interface the\nfollowing interface definitions will provide methods with a “UI” suffix\nmeant to provide to the UImanager the xml code to integrate inside the\nmain user interface, and other methods with the suffix “Action” meant to\nprovide to the main application actions to bind to the main UI widgets.\nPlugins must conform to the following protocol if they want to extend\npitivi UI, in change pitivi is obliged to integrate the widgets provided\nby plugins in the way plugins define, with the freedom to choose when\nit's time to integrate them (usually when the main user interface is\nbuilt at application startup or when user choose to activate the\nplugin).\n"});
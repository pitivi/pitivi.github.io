fragment_downloaded_cb({"url":"design/Title_editor_design.html#title-editor-design","fragment":"Title editor design\nHere's an attempt at summarizing the current situation for adding text\non video with gstreamer. Please improve/correct this page with your\nknowledge.\nThe question in everyone's mind:\n“What we should do in case of titles and text overlays with video\ncompositing? Will be they considered as a video clip with\ncorresponding properties?”\nIn the GES API reference manual, we can see\nGES.TitleSource\nand\nGES.TextOverlay.\nIn Pitivi, we would need one UI that does it all: allow creating a title\nclip/timeline object that may have a transparent background color. That\nway, if the user wants to use it as an overlay on video, he simply needs\nto set the background color to be fully transparent. Only one UI, only\none workflow. More flexibility for the user and less confusion. As you\ncan see in some other applications like\nthis (or even in\nkdenlive, I think), having a single UI to do everything feels great. We\ncan do a much better design than them, however!\nWe need to extend titlesource to be able to set a background color, or\neven a text border color:\n\n\nGES.TitleSource\nis a title clip/object as you'd imagine it. This is what we are\nusing now.\n\nGES.TextOverlay,\non the other hand, is something that is meant to be used really as\nan “overlay on top of an existing video stream” (ex: for subtitles).\nThis probably corresponds to the GStreamer text overlay\nelement.\n\n\nThis is probably easy/trivial to fix in GES, you just need to expose\nthe background-color property of GstVideoTestSrc into\nGESTrackVideoTestSource and the expose that in GESTitleSource.\nThat way, we can ignore textoverlay completely (titlesource will\njust depend on video compositing being reimplemented later on)\n\n"});